



CMAKE FLAGS:
The -s option stands for “strip” and GCC’s
documentation says this flag will cause the compiler to “remove all symbol table
and relocation information from the executable.”

Using “-fvisibility=hidden” will, by default, hide all possible symbols from
dynamic table .dymsym

-O3 is the second highest optimization level. The highest level, -Ofast, enables some
non-standards compliant optimazations so I generally avoid it. Unlike -Os, -O3 will
not shrink your binary. In fact, it has some optimizations that could make your binary
much larger

If the goal is to produce increasingly long and complicated code then -funroll-loops
is useful. -funroll-loops will “unroll” or undo the looping structure of any loop whose
iterations can be determined at compile time

According to the GCC documentation, -static “prevents linking with the shared
libraries”


Early Return
Another way to hide Trouble’s logic is to trick the dissasembler into exiting the
check_password() function early. One way to do this is to push an address onto
the stack and immeaditely return. This will cause the program to return to the
address on the stack.

Jump Over an Invalid Byte
GDB disassembles linearly. Knowing this you can hide the “mov $0x787, %rdi”
instruction by introducing extra bytes that won’t get executed, but GDB will treat as
valid code

fork
The code above will fork() a child process that becomes the tracer of the parent
Trouble process via PTRACE_ATTACH. It will also automatically begin tracing
any forks that Trouble creates due .
No one can simply attach to the main Trouble process since it is being traced by a child.(add PTRACE_O_EXITKILL)

/proc/self/status
Checks the "TracerPid" entry in the /proc/self/status file. If the value
is not zero then a debugger has attached. If a debugger is attached then
signal to the parent pid and exit.

You’ve come a long way in preventing the debugger from doing anything useful to
aid in reverse engineering. However, GDB can still sometimes⁵⁵ run Trouble until the
tracing child detects the debugger and kills the program. It would be better to catch
the debugger and exit earlier. Luckily, there is a mechanism to add code that will
execute before main() is executed. Functions using the “constructor” attribute will
be called before main().